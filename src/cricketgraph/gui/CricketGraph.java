/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cricketgraph.gui;

import cricketgraph.dao.CricketArgsDAO;
import cricketgraph.dao.CricketRecordDAO;
import cricketgraph.pojo.CricketArgs;
import cricketgraph.pojo.CricketRecord;
import java.awt.Color;
import java.awt.Desktop;
import java.io.File;
import java.io.IOException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
/**
 *
 * @author ABHIRAJ
 */
public class CricketGraph extends javax.swing.JFrame {

//    listModel.removeElement(txtClient.getText());
//    listModel = new DefaultListModel();
//    listModel.addElement(str);
    /**
     * Creates new form CricketGraph
     */
    
    public CricketGraph() throws SQLException {
        initComponents();
        //Input Format JComboBox
        Vector vectorInputFormat = new Vector();
        vectorInputFormat.add("T20");
        vectorInputFormat.add("Test");
        vectorInputFormat.add("ODI");
        jcbFormatInput.setEditable(false);
        DefaultComboBoxModel model = new DefaultComboBoxModel(vectorInputFormat);
        jcbFormatInput.setModel(model);
        
        updateNameDropDown();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tfYear = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        tfScore = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        tfFirst = new javax.swing.JTextField();
        tfLast = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jcbFormatInput = new javax.swing.JComboBox();
        label_ack = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        taSearchResult = new javax.swing.JTextArea();
        btnBar = new javax.swing.JButton();
        jcbName = new javax.swing.JComboBox();
        jcbYear = new javax.swing.JComboBox();
        jcbFormat = new javax.swing.JComboBox();
        btnRefresh = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        btnRun = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Inset data"));

        jLabel1.setText("First");

        jLabel2.setText("Year");

        jLabel3.setText("Format");

        jLabel4.setText("Runs");

        btnAdd.setText("ADD");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnCancel.setText("CANCEL");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        jLabel5.setText("Last");

        jcbFormatInput.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcbFormatInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbFormatInputActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label_ack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 66, Short.MAX_VALUE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                        .addGap(0, 2, Short.MAX_VALUE)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfLast)
                            .addComponent(tfYear)
                            .addComponent(tfFirst, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jcbFormatInput, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tfScore)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(btnCancel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(label_ack)
                .addGap(13, 13, 13)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfFirst, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfLast, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfYear, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbFormatInput, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfScore, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("View Data"));

        taSearchResult.setColumns(20);
        taSearchResult.setRows(5);
        jScrollPane1.setViewportView(taSearchResult);

        btnBar.setText("Bar Graph");
        btnBar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBarActionPerformed(evt);
            }
        });

        jcbName.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "All" }));
        jcbName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbNameActionPerformed(evt);
            }
        });

        jcbYear.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "All" }));
        jcbYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbYearActionPerformed(evt);
            }
        });

        jcbFormat.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "All" }));
        jcbFormat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbFormatActionPerformed(evt);
            }
        });

        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        jLabel6.setText("Name");

        jLabel7.setText("Format");

        jLabel8.setText("Year");

        btnRun.setText("Go");
        btnRun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRunActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jcbName, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jcbYear, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jcbFormat, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(44, 44, 44)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnRefresh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnBar, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE)
                            .addComponent(btnRun, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(21, 21, 21))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnRun, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jcbName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbFormat, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbYear, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnBar, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBarActionPerformed
        // TODO add your handling code here:
        File htmlFile = new File("C:\\Users\\ABHIRAJ\\Documents\\NetBeansProjects\\CricketGraph\\barchart.htm");
        try {
            Desktop.getDesktop().browse(htmlFile.toURI());
        } catch (IOException ex) {
            Logger.getLogger(CricketGraph.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnBarActionPerformed

    private void jcbNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbNameActionPerformed
        try {
            // TODO add your handling code here:
            updateFormatDropDown();
        } catch (SQLException ex) {
            Logger.getLogger(CricketGraph.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jcbNameActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        try {
            updateNameDropDown();
            taSearchResult.setText("");
        } catch (SQLException ex) {
            Logger.getLogger(CricketGraph.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
        tfFirst.setText("");
        tfLast.setText("");
        tfLast.setText("");
        tfYear.setText("");
        tfScore.setText("");
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        CricketRecord cricketRecord = new CricketRecord();
        cricketRecord.setFirst(tfFirst.getText());
        cricketRecord.setLast(tfLast.getText());
        String value = jcbFormatInput.getSelectedItem().toString();
        cricketRecord.setFormat(value);
        cricketRecord.setYear(Integer.parseInt(tfYear.getText()));
        cricketRecord.setScore(Integer.parseInt(tfScore.getText()));
        boolean flag = false;
        try {
            boolean result = CricketRecordDAO.addRecord(cricketRecord);
            if(!result) {
                Color textColor = new Color(0, 220, 0);
                label_ack.setForeground(textColor);
                label_ack.setText("Success!   One row inserted.");
                updateNameDropDown();
                flag = true;
            } else {
                Color textColor = new Color(255, 0, 0);
                label_ack.setForeground(textColor);
                label_ack.setText("Error!");
            }
        } catch (SQLException ex) {
            Color textColor = new Color(255, 0, 0);
            label_ack.setForeground(textColor);
            label_ack.setText("Error!");
            Logger.getLogger(CricketGraph.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            tfFirst.setText("");
            tfLast.setText("");
            tfYear.setText("");
            tfScore.setText("");
            if(!flag) {
                Color textColor = new Color(255, 0, 0);
                label_ack.setForeground(textColor);
                label_ack.setText("Error!");
            }
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void jcbFormatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbFormatActionPerformed
        try {
            updateYearDropDown();
        } catch (SQLException ex) {
            Logger.getLogger(CricketGraph.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jcbFormatActionPerformed

    private void jcbFormatInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbFormatInputActionPerformed
        // TODO add your handling code here:
 
    }//GEN-LAST:event_jcbFormatInputActionPerformed

    private void jcbYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbYearActionPerformed

    }//GEN-LAST:event_jcbYearActionPerformed

    private void btnRunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRunActionPerformed
        // TODO add your handling code here:
        btnBar.setEnabled(false);
        ResultSet rs;
        String str = "";
        try {
            CricketArgsDAO.truncateCricketArgs();
            
            if(jcbName.getSelectedItem().equals("All")) {
            if(jcbFormat.getSelectedItem().equals("All")) {
                if(jcbYear.getSelectedItem().equals("All")) {
                    rs = CricketRecordDAO.getRecord();
                    CricketArgsDAO.addCricketArgs(new CricketArgs("All","All",0));
                } else {
                    rs = CricketRecordDAO.getRecord(Integer.parseInt(jcbYear.getSelectedItem().toString()));
                    CricketArgsDAO.addCricketArgs(new CricketArgs("All","All",Integer.parseInt(jcbYear.getSelectedItem().toString())));
                }
            } else {
                if(jcbYear.getSelectedItem().equals("All")) {
                    rs = CricketRecordDAO.getRecordFormat(jcbFormat.getSelectedItem().toString());
                    CricketArgsDAO.addCricketArgs(new CricketArgs("All",jcbFormat.getSelectedItem().toString(),0));
                } else {
                    rs = CricketRecordDAO.getRecord(jcbFormat.getSelectedItem().toString(), Integer.parseInt(jcbYear.getSelectedItem().toString()));
                    CricketArgsDAO.addCricketArgs(new CricketArgs("All",jcbFormat.getSelectedItem().toString(), Integer.parseInt(jcbYear.getSelectedItem().toString())));
                }
            }
            } else {
                if(jcbFormat.getSelectedItem().equals("All")) {
                    if(jcbYear.getSelectedItem().equals("All")) {
                        rs = CricketRecordDAO.getRecord(jcbName.getSelectedItem().toString());
                        CricketArgsDAO.addCricketArgs(new CricketArgs(jcbName.getSelectedItem().toString(),"All",0));
                    } else {
                        rs = CricketRecordDAO.getRecordWOFormat(jcbName.getSelectedItem().toString(), Integer.parseInt(jcbYear.getSelectedItem().toString()));
                        CricketArgsDAO.addCricketArgs(new CricketArgs(jcbName.getSelectedItem().toString(), "All", Integer.parseInt(jcbYear.getSelectedItem().toString())));
                    }
                } else {
                    if(jcbYear.getSelectedItem().equals("All")) {
                        rs = CricketRecordDAO.getRecord(jcbName.getSelectedItem().toString(), jcbFormat.getSelectedItem().toString());
                        CricketArgsDAO.addCricketArgs(new CricketArgs(jcbName.getSelectedItem().toString(), jcbFormat.getSelectedItem().toString(), 0));
                    } else {
                        rs = CricketRecordDAO.getRecord(jcbName.getSelectedItem().toString(), jcbFormat.getSelectedItem().toString(), Integer.parseInt(jcbYear.getSelectedItem().toString()));
                        CricketArgsDAO.addCricketArgs(new CricketArgs(jcbName.getSelectedItem().toString(), jcbFormat.getSelectedItem().toString(), Integer.parseInt(jcbYear.getSelectedItem().toString())));
                    }
                }
            }
            str = "Name\tFormat\tYear\tRuns\n\n";
            while(rs.next()) {
                str = str + rs.getString("first") + "\t" + rs.getString("format") + "\t" + rs.getInt("year") + "\t" + rs.getInt("score") + "\n";
            }
            
            Runtime.getRuntime().exec("Rscript C:\\Users\\ABHIRAJ\\Documents\\R\\cricket.R");
        } catch(Exception e) {
            e.printStackTrace();
        }
        taSearchResult.setText(str);
        btnBar.setEnabled(true);
    }//GEN-LAST:event_btnRunActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CricketGraph.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CricketGraph.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CricketGraph.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CricketGraph.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new CricketGraph().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(CricketGraph.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBar;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnRun;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox jcbFormat;
    private javax.swing.JComboBox jcbFormatInput;
    private javax.swing.JComboBox jcbName;
    private javax.swing.JComboBox jcbYear;
    private javax.swing.JLabel label_ack;
    private javax.swing.JTextArea taSearchResult;
    private javax.swing.JTextField tfFirst;
    private javax.swing.JTextField tfLast;
    private javax.swing.JTextField tfScore;
    private javax.swing.JTextField tfYear;
    // End of variables declaration//GEN-END:variables

    private Vector getFormatVector(String name) throws SQLException {
        Vector vector = new Vector();
        ResultSet rs = CricketRecordDAO.getRecord(name);
        String format = "";
        while(rs.next()) {
            format = rs.getString("format");
            if(!vector.contains(format))
                vector.add(format);
        }
        return vector;
    }

    private Vector getYearVector(String name) throws SQLException {
        Vector vector = new Vector();
        ResultSet rs = CricketRecordDAO.getRecord(name);
        int year;
        while(rs.next()) {
            year = rs.getInt("year");
            if(!vector.contains(year))
                vector.add(year);
        }
        return vector;
    }

    private Vector getYearVector(String name, String format) throws SQLException {
         Vector vector = new Vector();
        ResultSet rs = CricketRecordDAO.getRecord(name,format);
        int year = 0;
        while(rs.next()) {
            year = rs.getInt("year");
            if(!vector.contains(year))
                vector.add(year);
        }
        return vector;
    }
    
    public String[] getNameArray() throws SQLException {
        ArrayList<String> names = new ArrayList<String>();
        ResultSet rs = CricketRecordDAO.getAllNames();
        String name;
        while(rs.next()) {
            name = rs.getString(2);
            if(!names.contains(name))
                names.add(name);
        }
        String namesArray[] = new String[names.size()+1];
        namesArray[0] = "All";
        for(int i = 1; i <= names.size(); i++) {
            namesArray[i] = names.get(i-1);
        }
        return namesArray;
   }
   
    public void updateNameDropDown() throws SQLException {
        Vector vectorName = new Vector();
        String names[] = getNameArray();
        for(String name: names) {
            vectorName.add(name);
        }
        jcbName.setEditable(false);
        DefaultComboBoxModel modelName = new DefaultComboBoxModel(vectorName);
        jcbName.setModel(modelName);
        updateFormatDropDown();
    }
    
    public void updateFormatDropDown() throws SQLException {
        Vector vector = new Vector();
        if(jcbName.getSelectedItem().toString().equals("All")) {  
            jcbFormat.setEditable(false);
            vector.add("All");
            vector.add("T20");
            vector.add("Test");
            vector.add("ODI");
            DefaultComboBoxModel modelFormat = new DefaultComboBoxModel(vector);
            jcbFormat.setModel(modelFormat);
        } else {
            vector.removeAllElements();
            try {
                vector = getFormatVector(jcbName.getSelectedItem().toString());
                vector.add("All");
            } catch (SQLException ex) {
                Logger.getLogger(CricketGraph.class.getName()).log(Level.SEVERE, null, ex);
            }
            jcbFormat.setEditable(false);
            DefaultComboBoxModel modelFormat = new DefaultComboBoxModel(vector);
            jcbFormat.setModel(modelFormat);
        }
        updateYearDropDown();
    }
   
    public void updateYearDropDown() throws SQLException {
        Vector vector = new Vector();
        if(jcbFormat.getSelectedItem().toString().equals("All") && !jcbName.getSelectedItem().toString().equals("All")) {
            try {
                vector = getYearVector(jcbName.getSelectedItem().toString());
                vector.add("All");
            } catch (SQLException ex) {
                Logger.getLogger(CricketGraph.class.getName()).log(Level.SEVERE, null, ex);
            }
            DefaultComboBoxModel modelYear = new DefaultComboBoxModel(vector);
            jcbYear.setEditable(false);
            jcbYear.setModel(modelYear);
        } else if(jcbFormat.getSelectedItem().toString().equals("All") && jcbName.getSelectedItem().toString().equals("All")) {
            vector.add("All");
            DefaultComboBoxModel modelYear = new DefaultComboBoxModel(vector);
            jcbYear.setEditable(false);
            jcbYear.setModel(modelYear);
        } else {
            vector.removeAllElements();
            try {
                vector = getYearVector(jcbName.getSelectedItem().toString(),jcbFormat.getSelectedItem().toString());
                vector.add("All");
            } catch (SQLException ex) {
                Logger.getLogger(CricketGraph.class.getName()).log(Level.SEVERE, null, ex);
            }
            DefaultComboBoxModel modelYear = new DefaultComboBoxModel(vector);
            jcbYear.setEditable(false);
            jcbYear.setModel(modelYear);
            
        }
    }
}
